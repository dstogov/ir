--TEST--
DESSA 005 (swap & tmp register)
--TARGET--
x86_64
--ARGS--
-S --run
--CODE--
func test(double, double, double, double, double, bool): void
{
	uintptr_t c_1 = 0;
	bool c_2 = 0;
	bool c_3 = 1;
	uintptr_t c_4 = func printf(uintptr_t, ...): void;
	uintptr_t c_5 = "%g %g %g %g %g\n";
	l_1 = START(l_23);
	double d_2 = PARAM(l_1, "arg_1", 1);
	double d_3 = PARAM(l_1, "arg_2", 2);
	double d_4 = PARAM(l_1, "arg_3", 3);
	double d_5 = PARAM(l_1, "arg_4", 4);
	double d_6 = PARAM(l_1, "arg_5", 5);
	bool d_7 = PARAM(l_1, "cond", 6);
	l_8 = END(l_1);
	l_9 = LOOP_BEGIN(l_8, l_18);
	double d_10 = PHI(l_9, d_2, d_12);
	double d_11 = PHI(l_9, d_3, d_10);
	double d_12 = PHI(l_9, d_4, d_13);
	double d_13 = PHI(l_9, d_5, d_14);
	double d_14 = PHI(l_9, d_6, d_12);
	bool d_15 = PHI(l_9, d_7, c_2);
	l_16 = IF(l_9, d_15);
	l_17 = IF_TRUE(l_16);
	l_18 = LOOP_END(l_17);
	l_19 = IF_FALSE(l_16);
	l_20 = CALL/6(l_19, c_4, c_5, d_10, d_11, d_12, d_13, d_14);
	l_23 = RETURN(l_20, null);
}
func main(): int32_t
{
	uintptr_t c_1 = 0;
	bool c_2 = 0;
	bool c_3 = 1;
	uintptr_t c_4 = func test(double, double, double, double, double, bool): void;
	double c_5 = 0.1;
	double c_6 = 0.2;
	double c_7 = 0.3;
	double c_8 = 0.4;
	double c_9 = 0.5;
	int32_t c_10 = 0;
	l_1 = START(l_8);
	l_2 = CALL/6(l_1, c_4, c_5, c_6, c_7, c_8, c_9, c_2);
	l_5 = CALL/6(l_2, c_4, c_5, c_6, c_7, c_8, c_9, c_3);
	l_8 = RETURN(l_5, c_10);
}
--EXPECT--
test:
	subq $8, %rsp
	jmp .L2
.L1:
	xorb %dil, %dil
	movapd %xmm3, %xmm1
	movapd %xmm4, %xmm3
	movapd %xmm2, %xmm4
	movapd %xmm1, %xmm2
	movapd %xmm0, %xmm1
	movapd %xmm4, %xmm0
.L2:
	testb %dil, %dil
	jne .L1
	leaq .L3(%rip), %rdi
	movl $5, %eax
	callq printf
	addq $8, %rsp
	retq
.rodata
	.db 0x90, 0x90, 0x90, 0x90
.L3:
	.db 0x25, 0x67, 0x20, 0x25, 0x67, 0x20, 0x25, 0x67, 0x20, 0x25, 0x67, 0x20, 0x25, 0x67, 0x0a, 0x00

main:
	subq $8, %rsp
	movsd .L1(%rip), %xmm0
	movsd .L2(%rip), %xmm1
	movsd .L3(%rip), %xmm2
	movsd .L4(%rip), %xmm3
	movsd .L5(%rip), %xmm4
	xorb %dil, %dil
	callq test
	movsd .L1(%rip), %xmm0
	movsd .L2(%rip), %xmm1
	movsd .L3(%rip), %xmm2
	movsd .L4(%rip), %xmm3
	movsd .L5(%rip), %xmm4
	movb $1, %dil
	callq test
	xorl %eax, %eax
	addq $8, %rsp
	retq
.rodata
	.db 0x90, 0x90, 0x90, 0x90, 0x90
.L1:
	.db 0x9a, 0x99, 0x99, 0x99, 0x99, 0x99, 0xb9, 0x3f
.L2:
	.db 0x9a, 0x99, 0x99, 0x99, 0x99, 0x99, 0xc9, 0x3f
.L3:
	.db 0x33, 0x33, 0x33, 0x33, 0x33, 0x33, 0xd3, 0x3f
.L4:
	.db 0x9a, 0x99, 0x99, 0x99, 0x99, 0x99, 0xd9, 0x3f
.L5:
	.db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xe0, 0x3f

0.1 0.2 0.3 0.4 0.5
0.3 0.1 0.4 0.5 0.3
